Subject: [PATCH] Added number of expenses per category row in category list
---
Index: expenses/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses/forms.py b/expenses/forms.py
--- a/expenses/forms.py	(revision f94f8d4aa50a9271bbf528c088a6daeafda16cf0)
+++ b/expenses/forms.py	(revision 98f196e88413e801c248d291082e05aef0b5d96a)
@@ -1,8 +1,16 @@
 from django import forms
-from .models import Expense
+from .models import Expense, Category
 
 
 class ExpenseSearchForm(forms.ModelForm):
+    from_date = forms.DateField(widget=forms.DateInput(attrs={'type': 'date'}), required=False)
+    to_date = forms.DateField(widget=forms.DateInput(attrs={'type': 'date'}), required=False)
+    categories = forms.ModelMultipleChoiceField(
+        queryset=Category.objects.all(),
+        widget=forms.CheckboxSelectMultiple,
+        required=False,
+    )
+
     class Meta:
         model = Expense
         fields = ('name',)
Index: expenses/reports.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses/reports.py b/expenses/reports.py
--- a/expenses/reports.py	(revision f94f8d4aa50a9271bbf528c088a6daeafda16cf0)
+++ b/expenses/reports.py	(revision 98f196e88413e801c248d291082e05aef0b5d96a)
@@ -13,4 +13,3 @@
         .annotate(s=Sum('amount'))
         .values_list('category_name', 's')
     ))
-
Index: expenses/templates/expenses/category_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses/templates/expenses/category_list.html b/expenses/templates/expenses/category_list.html
--- a/expenses/templates/expenses/category_list.html	(revision f94f8d4aa50a9271bbf528c088a6daeafda16cf0)
+++ b/expenses/templates/expenses/category_list.html	(revision 98f196e88413e801c248d291082e05aef0b5d96a)
@@ -7,6 +7,7 @@
 	<thead>
 		<tr>
 			<th>name</th>
+			<th>number of expenses</th>
 			<th>actions</th>
 		</tr>
 	</thead>
@@ -15,6 +16,9 @@
 		<tr>
 			<td>
 				{{obj.name}}
+			</td>
+			<td>
+				{{ obj.expense_set.count }}
 			</td>
 			<td>
 				<a href="{% url 'expenses:category-delete' obj.id %}">delete</a>
Index: expenses/templates/expenses/expense_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses/templates/expenses/expense_list.html b/expenses/templates/expenses/expense_list.html
--- a/expenses/templates/expenses/expense_list.html	(revision f94f8d4aa50a9271bbf528c088a6daeafda16cf0)
+++ b/expenses/templates/expenses/expense_list.html	(revision 98f196e88413e801c248d291082e05aef0b5d96a)
@@ -8,7 +8,21 @@
   {{form.as_p}}
   <button type="submit">search</button>
 </form>
+
+{% if sort_field %}
+  <p>Sorting by {{ sort_field }} in {{ sort_order }} order. <a href="?">Clear</a></p>
+{% endif %}
+
+<p>
+  Sort by:
+  <a href="?sort=category&order={{ sort_order }}">Category</a> |
+  <a href="?sort=-category&order={{ sort_order }}">Category descending</a> |
+  <a href="?sort=date&order={{ sort_order }}">Date</a> |
+  <a href="?sort=-date&order={{ sort_order }}">Date descending</a>
+</p>
+
 <br>
+
 <table border="1">
 	<caption>Expenses</caption>
 	<thead>
@@ -42,6 +56,31 @@
 	{% endfor %}
 	</tbody>
 </table>
+  <br>
+{% if summary_per_month %}
+<table border="1">
+  <caption>Total Summary per Year-Month</caption>
+  <thead>
+    <tr>
+      <th>Year-Month</th>
+      <th>Total Amount Spent</th>
+    </tr>
+  </thead>
+  <tbody>
+    {% for summary in summary_per_month %}
+      <tr>
+        <td>{{ summary.year|date:"Y" }}-{{ summary.month|date:"m" }}</td>
+        <td>{{ summary.total|floatformat:2 }}</td>
+      </tr>
+    {% empty %}
+      <tr>
+        <td colspan="2">No data available</td>
+      </tr>
+    {% endfor %}
+  </tbody>
+</table>
+{% endif %}
+<p>Total amount spent: {{ total_amount|floatformat:2 }}</p>
 
 {% include "_pagination.html" %}
 <hr>
Index: expenses/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/expenses/views.py b/expenses/views.py
--- a/expenses/views.py	(revision f94f8d4aa50a9271bbf528c088a6daeafda16cf0)
+++ b/expenses/views.py	(revision 98f196e88413e801c248d291082e05aef0b5d96a)
@@ -1,3 +1,8 @@
+from datetime import datetime
+
+from django.db.models import Sum
+from django.db.models.functions import TruncYear, TruncMonth
+from django.views import generic
 from django.views.generic.list import ListView
 
 from .forms import ExpenseSearchForm
@@ -9,19 +14,61 @@
     model = Expense
     paginate_by = 5
 
+    def get_queryset(self):
+        queryset = super().get_queryset()
+        sort = self.request.GET.get('sort')
+
+        if sort == 'category':
+            queryset = queryset.order_by('category__name')
+        elif sort == 'category_desc':
+            queryset = queryset.order_by('-category__name')
+        elif sort == 'date':
+            queryset = queryset.order_by('date')
+        elif sort == 'date_desc':
+            queryset = queryset.order_by('-date')
+
+        return queryset
+
     def get_context_data(self, *, object_list=None, **kwargs):
         queryset = object_list if object_list is not None else self.object_list
 
         form = ExpenseSearchForm(self.request.GET)
         if form.is_valid():
             name = form.cleaned_data.get('name', '').strip()
+            start_date_str = form.cleaned_data.get('start_date', '').strip()
+            end_date_str = form.cleaned_data.get('end_date', '').strip()
+            categories = form.cleaned_data.get('categories')
+
             if name:
                 queryset = queryset.filter(name__icontains=name)
+            if start_date_str and end_date_str:
+                start_date = datetime.strptime(start_date_str, '%Y-%m-%d')
+                end_date = datetime.strptime(end_date_str, '%Y-%m-%d')
+                queryset = queryset.filter(date__range=(start_date, end_date))
+            elif start_date_str:
+                start_date = datetime.strptime(start_date_str, '%Y-%m-%d')
+                queryset = queryset.filter(date__gte=start_date)
+            elif end_date_str:
+                end_date = datetime.strptime(end_date_str, '%Y-%m-%d')
+                queryset = queryset.filter(date__lte=end_date)
+            elif categories:
+                queryset = queryset.filter(category__in=categories)
+
+        total_amount = queryset.aggregate(Sum('amount'))['amount__sum'] or 0
+
+        summary_per_month = (
+            queryset.annotate(year=TruncYear('date'), month=TruncMonth('date'))
+            .values('year', 'month')
+            .annotate(total=Sum('amount'))
+            .order_by('-year', '-month')
+        )
 
         return super().get_context_data(
             form=form,
             object_list=queryset,
             summary_per_category=summary_per_category(queryset),
+            total_amount=total_amount,
+            summary_per_month=summary_per_month,
             **kwargs)
 
 
@@ -29,3 +76,7 @@
     model = Category
     paginate_by = 5
 
+
+class CategoryDetailView(generic.DetailView):
+    model = Category
+    queryset = Category.objects.all()
